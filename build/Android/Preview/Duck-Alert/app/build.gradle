apply plugin: 'com.android.model.application'

dependencies {
    compile fileTree(dir: 'src/main/libs', include: ['*.jar'])
    compile 'com.android.support:support-v4:+'
    compile 'com.android.support:appcompat-v7:+'
    compile 'com.android.support:design:+'
//#if #(Gradle.Dependency.Compile:IsRequired)
    compile 'com.google.android.gms:play-services-gcm:+'
//#endif
//#if #(Gradle.Dependency:IsRequired)
//    #(Gradle.Dependency:Join('\n'))
//#endif
}


task copySharedLibraries {
    copy {
        from '/Users/JLMacAir/Library/Application Support/Fusetools/Fuse/Android/AndroidNDK/sources/cxx-stl/stlport/libs/armeabi-v7a/libstlport_shared.so'
        into file('src/main/jniLibs/armeabi-v7a')
    }
    copy {
        from '/usr/local/share/uno/Packages/Fuse.Scripting.V8/0.40.8/lib/Android/libV8Simple.so'
        into file('src/main/jniLibs/armeabi-v7a')
    }
}

build.dependsOn copySharedLibraries

//#if #(Gradle.Repository:IsRequired)
//repositories {
//    #(Gradle.Repository:Join('\n'))
//}
//#endif

model {
    repositories {
        libs(PrebuiltLibraries) {
            prebuilt {
                binaries.withType(SharedLibraryBinary) {
                    sharedLibraryFile = file('/Users/JLMacAir/Library/Application Support/Fusetools/Fuse/Android/AndroidNDK/sources/cxx-stl/stlport/libs/armeabi-v7a/libstlport_shared.so')
                    sharedLibraryFile = file('/usr/local/share/uno/Packages/Fuse.Scripting.V8/0.40.8/lib/Android/libV8Simple.so')
                }
            }
        }
//#if #(Gradle.Model.Repository:IsRequired)
//        #(Gradle.Model.Repository:Join('\n'))
//#endif
    }

    android.lintOptions {
        checkReleaseBuilds = false
    }

    android {
        compileSdkVersion = 23
        buildToolsVersion = "23.0.1"

        defaultConfig.with {
            applicationId = "com.apps.duckalert"
            minSdkVersion.apiLevel = 16
            targetSdkVersion.apiLevel = 23
            versionCode = 0
            versionName = "0.0.0"
        }
    }

//#if #(Project.Android.Key.Store:IsSet)
//    android.signingConfigs {
//        create("release") {
//            keyAlias = "#(Project.Android.Key.Alias)"
//            keyPassword = "#(Project.Android.Key.AliasPassword)"
//            storeFile = file("#(Project.Android.Key.Store:Path)")
//            storePassword = "#(Project.Android.Key.StorePassword)"
//        }
//    }
//#endif

    android.ndk {
        moduleName = "DuckAlert"
        debuggable = true
        platformVersion = 9
        CFlags.addAll(["-std=c99"])
        CFlags.addAll(["-I/Users/JLMacAir/development/hackathons/Duck-Alert/build/Android/Preview/Duck-Alert/app/src/main/include", "-I/usr/local/share/uno/Packages/Fuse.Scripting.V8/0.40.8", "-I/usr/local/share/uno/Packages/UnoCore/0.40.2/prebuilt/Android/include"])
        CFlags.addAll([])
        cppFlags.addAll(["-std=c++11", "-fexceptions", "-frtti", "-Wno-invalid-offsetof"])
        cppFlags.addAll(["-I/Users/JLMacAir/development/hackathons/Duck-Alert/build/Android/Preview/Duck-Alert/app/src/main/include", "-I/usr/local/share/uno/Packages/Fuse.Scripting.V8/0.40.8", "-I/usr/local/share/uno/Packages/UnoCore/0.40.2/prebuilt/Android/include"])
        cppFlags.addAll([])
        ldFlags.addAll(["-L/Users/JLMacAir/Library/Application Support/Fusetools/Fuse/Android/AndroidNDK/sources/cxx-stl/stlport/libs/armeabi-v7a", "-L/usr/local/share/uno/Packages/Fuse.Scripting.V8/0.40.8/lib/Android", "-L/usr/local/share/uno/Packages/UnoCore/0.40.2/prebuilt/Android/lib/armeabi-v7a"])
        ldLibs.addAll(["/usr/local/share/uno/Packages/UnoCore/0.40.2/prebuilt/Android/lib/armeabi-v7a/libuImage.a", "/usr/local/share/uno/Packages/UnoCore/0.40.2/prebuilt/Android/lib/armeabi-v7a/libpng.a", "/usr/local/share/uno/Packages/UnoCore/0.40.2/prebuilt/Android/lib/armeabi-v7a/libjpeg.a", "/usr/local/share/uno/Packages/UnoCore/0.40.2/prebuilt/Android/lib/armeabi-v7a/libfreetype.a", "/usr/local/share/uno/Packages/UnoCore/0.40.2/prebuilt/Android/lib/armeabi-v7a/libXliMain.a", "/usr/local/share/uno/Packages/UnoCore/0.40.2/prebuilt/Android/lib/armeabi-v7a/libXliPlatform.a", "/usr/local/share/uno/Packages/UnoCore/0.40.2/prebuilt/Android/lib/armeabi-v7a/libuBase.a"])
        ldLibs.addAll(["android", "EGL", "GLESv2", "log", "stlport_shared", "V8Simple", "z"])
        stl = "stlport_shared"
    }

    android.sources {
        main {
            jni {
                dependencies {
                    library "prebuilt"
                }
            }
        }
    }

    android.buildTypes {
        release {
            minifyEnabled = false
            proguardFiles.add(file('proguard-rules.txt'))
//#if #(Project.Android.Key.Store:IsSet)
//            signingConfig = $("android.signingConfigs.release")
//#endif
        }
    }

    android.productFlavors {
        // for detailed abiFilter descriptions, refer to "Supported ABIs" @
        // https://developer.android.com/ndk/guides/abis.html#sa
        create("arm7") {
            ndk.abiFilters.add("armeabi-v7a")
        }
    }
}

